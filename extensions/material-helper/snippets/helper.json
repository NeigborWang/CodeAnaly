{
  "lazy import": {
    "prefix": "lazy",
    "body": "const ${2:componentName} = lazy(() => import('${1:path}'));",
    "description": "lazy import"
  },
  "lazy import with chunkName": {
    "prefix": "lazy",
    "body": "const ${3:componentName} = lazy(() => import(/* webpackChunkName: '${2:chunkName}' */ '${1:path}'));",
    "description": "lazy import with chunkName"
  },
  "useRequest": {
    "prefix": "useRequest",
    "body": "const { data, error, loading, request } = useRequest(${1:service});",
    "description": "useRequest"
  },
  "mtop Request": {
    "prefix": "mtop.request",
    "body": [
      "Mtop.request({",
      "\tapi: '${1:api}'",
      "\tv: '${2:version}'",
      "\tdata: ${3:data}",
      "}).then(",
      "\t(value) => {${4}}",
      ").catch(",
      "\t(error) => {${5}}",
      ");"
    ],
    "description": "mtop.request"
  },
  "mtop config": {
    "prefix": "mtop.config",
    "body": "Mtop.config('${1:configKey}', '${2:configValue}')",
    "description": "mtop config"
  },
  "model": {
    "prefix": "model",
    "body": [
      "export default {",
      "\tstate: {",
      "\t\t${1}",
      "\t},",
      "\treducers: {",
      "\t\t${2}",
      "\t},",
      "\teffects: (dispatch) => {",
      "\t\t${3}",
      "\t}",
      "}"
    ],
    "description": "model"
  }
}